================================================================
#1번 문제
================================================================
N,M = map(int,input().split())
check_list=[False] * N
answer_list=[]
number_list=[i for i in range( 1, N+1) ]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        check_list[i]=True
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
        check_list[i]=False
function(0)
================================================================
#2번 문제
================================================================
N,M=map(int,input().split())
answer_list=[]
number_list=[i for i in range(1,1+N)]
check_list=[False]*N
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        answer_list.append(number_list[i])
        check_list[i]=True
        function(number+1)
        answer_list.pop()
        for j in range(i+1,N):
            check_list[j]=False
function(0)
================================================================
#3번 문제
================================================================
N,M=map(int,input().split())
answer_list=[]
number_list=[i for i in range(1,1+N)]
check_list=[False]*N
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
function(0)
===================================================
#4번 문제
===================================================
N,M=list(map(int,input().split()))
number_list=[i+1 for i in range(N)]
check_list=[False]*N
answer_list=[]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        for l in range(i):
            check_list[l]=True
        answer_list.append(number_list[i])
        function(number+1)
        check_list[i]=False
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
function(0)
===================================================
#5번 문제
===================================================
count=0
number=int(input())
row_list=[False]*number
cross1_list=[False]*(2*number-1)
cross2_list=[False]*(2*number-1)
def function(num):
    global count
    if num==number:
        count+=1
        return
    for i in range(number):
        if  row_list[i] or  cross1_list[i+num] or cross2_list[num+number-i-1]:
            continue
        row_list[i]=cross1_list[i+num]=cross2_list[num+number-i-1]=True
        function(num+1)
        row_list[i]=cross1_list[i+num]=cross2_list[num+number-i-1]=False
function(0)
print(count)
===================================================
#6번 문제
===================================================
number_list=[]
case_list=[]
for i in range(9):
    number_list.append(list(map(int,input().split())))
for i in range(9):
    for l in range(9):
        if number_list[i][l]==0:
            case_list.append((i,l))
check_list=[False]*9
def three(x,y):
    x=(x//3)*3
    y=(y//3)*3
    for i in range(3):
        for l in range(3):
            if number_list[x+i][y+l]==0:
                continue
            check_list[number_list[x+i][y+l]-1]=True
def row(x,y):
    for i in range(9):
        if number_list[x][i]!=0:
            check_list[number_list[x][i]-1]=True
        if number_list[i][y]!=0:
            check_list[number_list[i][y]-1]=True
def possible(x,y):
    global check_list
    answer_list=[]
    row(x,y)
    three(x,y)
    for i in range(9):
        if check_list[i]:
            continue
        answer_list.append(i+1)
    check_list=[False]*9
    return answer_list
def dfs(count):
    if count==len(case_list):
        for row in number_list:
            print(*row)
        quit()
    first,second=case_list[count]
    answer=possible(first,second)
    for k in answer:
        number_list[first][second]=k
        dfs(count+1)
        number_list[first][second]=0
dfs(0)
===================================================
===================================================
===================================================
#1182번 문제
===================================================
answer=0
N,M=list(map(int,input().split()))
answer_list=[]
number_list=list(map(int,input().split()))
check_list=[False]*N
def function(number):
    global answer
    if number==N:
        return
    for i in range(N):
        if check_list[i]:
            continue
        check_list[i]=True
        answer_list.append(number_list[i])
        if sum(answer_list)==M:
            answer+=1
        function(number+1)
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
for l in range(N):
    function(l)
print(answer)
===================================================
#15652번 문제
===================================================
N,M=list(map(int,input().split()))
number_list=list(map(int,input().split()))
number_list.sort()
check_list=[False]*N
answer_list=[]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        check_list[i]=True
        answer_list.append(number_list[i])
        function(number+1)
        check_list[i]=False
        answer_list.pop()
function(0)
===================================================
#15655번 문제
===================================================
N,M=list(map(int,input().split()))
number_list=list(map(int,input().split()))
number_list.sort()
check_list=[False]*N
answer_list=[]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        check_list[i]=True
        answer_list.append(number_list[i])
        function(number+1)
        for l in range(i+1,N):
            check_list[l]=False
        answer_list.pop()
function(0)
===================================================
#15656번 문제
===================================================
N,M=list(map(int,input().split()))
number_list=list(map(int,input().split()))
number_list.sort()
check_list=[False]*N
answer_list=[]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
function(0)
============================================
#15657번 문제
N,M=list(map(int,input().split()))
number_list=list(map(int,input().split()))
check_list=[False]*N
number_list.sort()
answer_list=[]
def function(number):
    if number==M:
        print(*answer_list)
        return
    for i in range(N):
        if check_list[i]:
            continue
        for l in range(i):
            check_list[l]=True
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
function(0)
============================================
#15663번 문제
============================================
N,M=list(map(int,input().split()))
number_list=sorted(list(map(int,input().split())))
answer_list=[]
check_list=[False]*N
def function(number):
    if number == M :
        print(*answer_list)
        return
    last=0
    for i in range(N):
        if check_list[i] :
            continue
        if last == number_list[i]:
            continue
        last=number_list[i]
        check_list[i]=True
        answer_list.append(number_list[i])
        function(number+1)
        check_list[i]=False
        answer_list.pop()
function(0)
============================================
#15664번 문제
============================================
N,M=list(map(int,input().split()))
number_list=sorted(list(map(int,input().split())))
answer_list=[]
check_list=[False]*N
def function(number):
    if number==M:
        print(*answer_list)
        return
    last=0
    for i in range(N):
        if check_list[i] or number_list[i]==last:
            continue
        last=number_list[i]
        for l in range(i+1):
            check_list[l]=True
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
function(0)
============================================
#15665번 문제
============================================
N,M=list(map(int,input().split()))
number_list=sorted(list(map(int,input().split())))
answer_list=[]
check_list=[False]*N
def function(number):
    if number==M:
        print(*answer_list)
        return
    last=0
    for i in range(N):
        if check_list[i] or number_list[i]==last:
            continue
        last=number_list[i]
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
function(0)
============================================
#6603번 문제
============================================

number_list=list(map(int,input().split()))
N=number_list[0]
number_list=number_list[1:]
check_list=[False]*N
answer_list=[]
def function(number):
    if number==6:
        print(*answer_list)
        return
    for i in range(len(number_list)):
        if check_list[i]:
            continue
        check_list[i]=True
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
while N != 0:
    function(0)    
    number_list=list(map(int,input().split()))
    N=number_list[0]
    number_list=number_list[1:]
    check_list=[False]*N
    answer_list=[]
    if N != 0:
        print('')
============================================
#15666번 문제
============================================
N,M=list(map(int,input().split()))
number_list=sorted(list(map(int,input().split())))
check_list=[False]*N
answer_list=[]
def function(number):
    if number == M:
        print(*answer_list)
        return
    last=0
    for i in range(N):
        if check_list[i]:
            continue
        if last==number_list[i]:
            continue
        last=number_list[i]
        for l in range(i):
            check_list[l]=True
        answer_list.append(number_list[i])
        function(number+1)
        answer_list.pop()
        for l in range(i+1,N):
            check_list[l]=False
function(0)
============================================
#14888번
============================================
num = int(input())
number_list = list(map(int,input().split()))
case_list= list(map(int,input().split()))
maxnumber=-1e9
minnumber=1e9
def function(number,count,fir,sec,thr,fou):
    global answer,minnumber,maxnumber
    if count==num-1:
        minnumber=min(minnumber,number)
        maxnumber=max(maxnumber,number)
        return     
    if fir !=0 :
        function(number+number_list[count+1],count+1,fir-1,sec,thr,fou)
    if sec !=0 :
        function(number-number_list[count+1],count+1,fir,sec-1,thr,fou)
    if thr !=0 :
        function(number*number_list[count+1],count+1,fir,sec,thr-1,fou)
    if fou !=0 :
        if number < 0 :
            function(-(abs(number)//number_list[count+1]),count+1,fir,sec,thr,fou-1)
        else:
            function(number//number_list[count+1],count+1,fir,sec,thr,fou-1)
function(number_list[0],0,case_list[0],case_list[1],case_list[2],case_list[3])
print(maxnumber)
print(minnumber)
============================================
number=int(input())
number_list=list(map(int,input().split()))
calculate_list=list(map(int,input().split()))
maximum=-1e9
minimum=1e9
def function(countnumber,answer,plus,minus,times,quotient):
    global maximum,minimum
    if countnumber==number:
        maximum=max(maximum,answer)
        minimum=min(minimum,answer)
        return
    if plus>0:
        function(countnumber+1,answer+number_list[countnumber],plus-1,minus,times,quotient)
    if minus>0:
        function(countnumber+1,answer-number_list[countnumber],plus,minus-1,times,quotient)
    if times>0:
        function(countnumber+1,answer*number_list[countnumber],plus,minus,times-1,quotient)
    if quotient>0:
        function(countnumber+1, answer//number_list[countnumber] if answer > 0 else -((-answer)//number_list[countnumber]), plus, minus, times, quotient-1)
function(1,number_list[0],calculate_list[0],calculate_list[1],calculate_list[2],calculate_list[3])
print(maximum)
print(minimum)
